JOBSUB

#!/bin/bash
#SBATCH -N 1
#SBATCH -t 12:00:00
#SBATCH --ntasks-per-node=32
#SBATCH --partition=tc

echo "== Starting run at $(date)"
echo "== Job ID: ${SLURM_JOBID}"
echo "== Node list: ${SLURM_NODELIST}"
echo "== Submit dir. : ${SLURM_SUBMIT_DIR}"
echo "== Scratch dir. : ${TMPDIR}"

# TC
module load shared
module load ams/2025.103
export SCM_TMPDIR="/scratch/${SLURM_JOBID}"
srun mkdir -p ${SCM_TMPDIR}
srun chmod 733 ${SCM_TMPDIR}

# Snellius
# module load 2022
# module load AMS/2023.101-intelmpi
# module list

[postamble]
srun rm -rf ${SCM_TMPDIR}

JOBSUB END

AMS

Task SinglePoint
System
    Charge 0
End

Engine ADF

  XC
    GGA BLYP
    DISPERSION Grimme3 BJDAMP
  END

  NumericalQuality Normal

  BASIS
    TYPE TZ2P
    CORE None
  END

EndEngine

AMS END

PyFrag

name methane
coordfile $SLURM_SUBMIT_DIR/*xyz
frag1_indices  1-4 # Put here the atom indices of the first fragment (start with 1)
frag2_indices  5 # Put here the atom indices of the second fragment (start with 1)
frag1_energy   0 # Put here the (optimized) energy of the first fragment (in kcal/mol)
frag2_energy   0 # Put here the (optimized) energy of the second fragment (in kcal/mol)

bondlength 1 5
# log_level debug

overlap A1 frag1 3_A A frag2 1_A
overlap A1 frag1 3_B A frag2 1_B
overlap A1 frag1 2_B A frag2 1_B

orbitalenergy A1 frag1 3_A
orbitalenergy A1 frag2 1_A

population frag1 HOMO
population frag2 HOMO
population A1 frag1 3_A
population A frag2 1_A

PyFrag END


fragment1 extra

Engine ADF

  Spinpolarization 1
  unrestricted

  IrrepOccupations
    E1 2//2
    A1 3//2
  END

  Symmetry C(3V)

EndEngine

fragment1 EXTRA END


fragment2 extra

Engine ADF
  Spinpolarization -1
  Unrestricted

  IrrepOccupations
    A 0//1
  END

EndEngine

fragment2 EXTRA END


complex EXTRA

Engine ADF

  UnrestrictedFragments
  unrestricted

EndEngine

complex EXTRA END